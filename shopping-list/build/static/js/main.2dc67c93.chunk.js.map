{"version":3,"sources":["List.js","App.js","index.js"],"names":["List","shoppingList","setShoppingList","setUserInput","setEditItemId","setMessage","map","item","className","name","onClick","editId","itemDetails","filter","id","handleEdit","deleteId","remainingItems","handleDelete","App","useState","message","userInput","editItemId","JSON","parse","localStorage","getItem","useEffect","timeout","setTimeout","clearTimeout","setItem","stringify","onSubmit","e","preventDefault","Date","getTime","toString","editableObject","list","index","indexOf","splice","type","value","onChange","target","length","href","ReactDOM","render","document","getElementById"],"mappings":"wMAgCeA,EA9BF,SAAC,GAAgF,IAA9EC,EAA6E,EAA7EA,aAAcC,EAA+D,EAA/DA,gBAAiBC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAaxE,OACI,mCACKJ,EAAaK,KAAI,SAAAC,GACd,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAf,SAA4BD,EAAKE,OACjC,gCACI,cAAC,IAAD,CAAQD,UAAU,WAAWE,QAAS,kBAb3C,SAAAC,GACf,IAAMC,EAAcX,EAAaY,QAAO,SAAAN,GAAI,OAAIA,EAAKO,KAAOH,KAAQ,GACpER,EAAaS,EAAYH,MACzBL,EAAcQ,EAAYE,IAUsCC,CAAWR,EAAKO,OAC5D,cAAC,IAAD,CAASN,UAAU,YAAYE,QAAS,kBApB3C,SAAAM,GACjB,IAAMC,EAAiBhB,EAAaY,QAAO,SAAAN,GAAI,OAAIA,EAAKO,KAAOE,KAC/Dd,EAAgBe,GAChBZ,EAAW,gBAiBuDa,CAAaX,EAAKO,YAJxCP,EAAKO,UCuD1CK,MAvEf,WACI,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBhB,EAAhB,KACA,EAAkCe,mBAAS,IAA3C,mBAAOE,EAAP,KAAkBnB,EAAlB,KACA,EAAoCiB,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBnB,EAAnB,KACA,EAAwCgB,mBAA8D,OAArDI,KAAKC,MAAMC,aAAaC,QAAQ,iBAA4BH,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,CAAC,CAAEb,GAAI,KAAML,KAAM,SAAW,CAAEK,GAAI,KAAML,KAAM,UAAhN,mBAAOR,EAAP,KAAqBC,EAArB,KAuCA,OApCA0B,qBAAU,WACN,IAAMC,EAAUC,YAAW,WACvBzB,EAAW,MACZ,KAEH,OAAO,kBAAM0B,aAAaF,MAC3B,CAACR,IAGJO,qBAAU,WACNF,aAAaM,QAAQ,eAAgBR,KAAKS,UAAUhC,MACrD,CAACA,IA0BA,qCACI,qBAAKO,UAAU,eAAf,SACI,sBAAKA,UAAU,MAAf,UACI,8CACA,uBAAMA,UAAU,OAAO0B,SA5BlB,SAAAC,GAGjB,GAFAA,EAAEC,kBAEGb,GAAcD,EAEfpB,EAAgB,GAAD,mBAAKD,GAAL,CAAmB,CAAEa,IAAI,IAAIuB,MAAOC,UAAUC,WAAY9B,KAAMa,MAE/EnB,EAAa,IACbE,EAAW,mBACR,GAAIkB,GAAcD,EAAW,CAEhC,IAAMkB,EAAiBvC,EAAaY,QAAO,SAAAN,GAAI,OAAIA,EAAKO,KAAOS,KAAY,GACrEkB,EAAI,YAAOxC,GACXyC,EAAQD,EAAKE,QAAQH,GAC3BC,EAAKG,OAAOF,EAAO,EAAG,CAAE5B,GAAIS,EAAYd,KAAMa,IAC9CpB,EAAgBuC,GAEhBrC,EAAc,MACdD,EAAa,IACbE,EAAW,kBASH,UACI,uBAAOwC,KAAK,OAAOC,MAAOxB,EAAWyB,SAAU,SAAAZ,GAAC,OAAIhC,EAAagC,EAAEa,OAAOF,UAC1E,wBAAQD,KAAK,SAAb,SAAuBtB,EAAa,OAAS,QAC5CF,GAAW,qBAAKb,UAAU,UAAf,SAA0Ba,OAG1C,cAAC,EAAD,CAAMpB,aAAcA,EAAcC,gBAAiBA,EAAiBC,aAAcA,EAAcC,cAAeA,EAAeC,WAAYA,IACzIJ,EAAagD,OAAS,GACnB,wBAAQzC,UAAU,YAAYE,QAAS,kBAAMR,EAAgB,KAA7D,8BAMZ,iCACI,uDAC0B,mBAAGgD,KAAK,4CAAR,oC,MC9D1CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2dc67c93.chunk.js","sourcesContent":["import { GrEdit, GrTrash } from \"react-icons/gr\"\n\nconst List = ({ shoppingList, setShoppingList, setUserInput, setEditItemId, setMessage }) => {\n    const handleDelete = deleteId => {\n        const remainingItems = shoppingList.filter(item => item.id !== deleteId)\n        setShoppingList(remainingItems)\n        setMessage(\"Item Removed\")\n    }\n\n    const handleEdit = editId => {\n        const itemDetails = shoppingList.filter(item => item.id === editId)[0]\n        setUserInput(itemDetails.name)\n        setEditItemId(itemDetails.id)\n    }\n\n    return (\n        <>\n            {shoppingList.map(item => {\n                return (\n                    <div className=\"todo-item\" key={item.id}>\n                        <div className=\"todo-text\">{item.name}</div>\n                        <div>\n                            <GrEdit className=\"edit-btn\" onClick={() => handleEdit(item.id)} />\n                            <GrTrash className=\"trash-btn\" onClick={() => handleDelete(item.id)} />\n                        </div>\n                    </div>\n                )\n            })}\n        </>\n    )\n}\n\nexport default List\n","import { useState, useEffect } from \"react\"\nimport List from \"./List\"\n\nfunction App() {\n    const [message, setMessage] = useState(\"\")\n    const [userInput, setUserInput] = useState(\"\")\n    const [editItemId, setEditItemId] = useState(null)\n    const [shoppingList, setShoppingList] = useState(JSON.parse(localStorage.getItem(\"shoppingList\")) !== null ? JSON.parse(localStorage.getItem(\"shoppingList\")) : [{ id: 3123, name: \"Bread\" }, { id: 2234, name: \"Milk\" }])\n\n    // hiding the message after 1 seconds\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            setMessage(\"\")\n        }, 1000)\n\n        return () => clearTimeout(timeout)\n    }, [message])\n\n    // saving shoppingList to localStorage on change\n    useEffect(() => {\n        localStorage.setItem(\"shoppingList\", JSON.stringify(shoppingList))\n    }, [shoppingList])\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (!editItemId && userInput) {\n            // new item\n            setShoppingList([...shoppingList, { id: new Date().getTime().toString(), name: userInput }])\n\n            setUserInput(\"\")\n            setMessage(\"Item Added\")\n        } else if (editItemId && userInput) {\n            // editing existing item\n            const editableObject = shoppingList.filter(item => item.id === editItemId)[0]\n            const list = [...shoppingList]\n            const index = list.indexOf(editableObject)\n            list.splice(index, 1, { id: editItemId, name: userInput })\n            setShoppingList(list)\n\n            setEditItemId(null)\n            setUserInput(\"\")\n            setMessage(\"Item Changed\")\n        }\n    }\n\n    return (\n        <>\n            <div className=\"page-content\">\n                <div className=\"app\">\n                    <h3>Grocery List</h3>\n                    <form className=\"form\" onSubmit={handleSubmit}>\n                        <input type=\"text\" value={userInput} onChange={e => setUserInput(e.target.value)} />\n                        <button type=\"submit\">{editItemId ? \"Save\" : \"Add\"}</button>\n                        {message && <div className=\"message\">{message}</div>}\n                    </form>\n\n                    <List shoppingList={shoppingList} setShoppingList={setShoppingList} setUserInput={setUserInput} setEditItemId={setEditItemId} setMessage={setMessage} />\n                    {shoppingList.length > 1 && (\n                        <button className=\"clear-btn\" onClick={() => setShoppingList([])}>\n                            Clear Items\n                        </button>\n                    )}\n                </div>\n            </div>\n            <footer>\n                <p>\n                    Designed and Coded by <a href=\"https://www.linkedin.com/in/amanmaharshi/\">Aman Maharshi</a>\n                </p>\n            </footer>\n        </>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./style.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}