{"version":3,"sources":["ColorBlock.js","App.js","index.js"],"names":["ColorBlock","props","useState","isColorCopied","setIsColorCopied","color","textColor","index","useEffect","timeout","setTimeout","clearTimeout","className","style","background","hex","onClick","e","rgbColor","currentTarget","navigator","clipboard","writeText","weight","App","userInput","setUserInput","error","setError","colorShades","setColorShades","onSubmit","preventDefault","Values","all","console","log","type","value","onChange","target","placeholder","map","href","ReactDOM","render","document","getElementById"],"mappings":"sNAgCeA,EA9BI,SAAAC,GAAU,IAAD,EACkBC,oBAAS,GAD3B,mBACjBC,EADiB,KACFC,EADE,KAGhBC,EAAiBJ,EAAjBI,MAEJC,EAFqBL,EAAVM,MAES,EAAI,QAAU,QAgBtC,OARAC,qBAAU,WACN,IAAMC,EAAUC,YAAW,WACvBN,GAAiB,KAClB,KAEH,OAAO,kBAAMO,aAAaF,MAC3B,CAACN,IAGA,sBAAKS,UAAU,aAAaC,MAAO,CAAEC,WAAW,IAAD,OAAMT,EAAMU,KAAOV,MAAOC,GAAaU,QAftE,SAAAC,GAChB,IAAMC,EAAWD,EAAEE,cAAcN,MAAMC,WACvCM,UAAUC,UAAUC,UAAUJ,GAC9Bd,GAAiB,IAYjB,UACI,oCAAOC,EAAMU,OACb,gCAAMV,EAAMkB,OAAZ,QACA,qBAAKX,UAAU,eAAf,SAA+BT,EAAgB,sBAAwB,SC0BpEqB,MAjDf,WAAgB,IAAD,EACuBtB,mBAAS,IADhC,mBACJuB,EADI,KACOC,EADP,OAEexB,oBAAS,GAFxB,mBAEJyB,EAFI,KAEGC,EAFH,OAG2B1B,mBAAS,MAHpC,mBAGJ2B,EAHI,KAGSC,EAHT,KAiBX,OACI,qCACI,qBAAKlB,UAAU,eAAf,SACI,sBAAKA,UAAU,UAAf,UACI,uDACA,2EACA,mBAAGA,UAAU,qBAAb,6DAEA,uBAAMA,UAAU,OAAOmB,SApBlB,SAAAd,GACjBA,EAAEe,iBACF,IACI,IAAM3B,EAAQ,IAAI4B,IAAOR,GACzBK,EAAezB,EAAM6B,IAAI,KACzBN,GAAS,GACX,MAAOX,GACLkB,QAAQC,IAAInB,GACZW,GAAS,KAYD,UACI,uBAAOS,KAAK,OAAOC,MAAOb,EAAWc,SAAU,SAAAtB,GAAC,OAAIS,EAAaT,EAAEuB,OAAOF,QAAQG,YAAY,UAC9F,wBAAQJ,KAAK,SAAb,sBACCV,EAAQ,qBAAKf,UAAU,QAAf,2BAA6C,QAG1D,qBAAKA,UAAU,mBAAf,SACKiB,IACIF,GACDE,EAAYa,KAAI,SAACrC,EAAOE,GACpB,OAAO,cAAC,EAAD,CAAwBF,MAAOA,EAAOE,MAAOA,GAA5BA,aAK5C,iCACI,uDAC0B,mBAAGoC,KAAK,4CAAR,oCCzC1CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b6453aa9.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst ColorBlock = props => {\n    const [isColorCopied, setIsColorCopied] = useState(false)\n\n    const { color, index } = props\n\n    let textColor = index > 4 ? \"white\" : \"black\"\n\n    const handleClick = e => {\n        const rgbColor = e.currentTarget.style.background\n        navigator.clipboard.writeText(rgbColor)\n        setIsColorCopied(true)\n    }\n\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            setIsColorCopied(false)\n        }, 1000)\n\n        return () => clearTimeout(timeout)\n    }, [isColorCopied])\n\n    return (\n        <div className=\"color-tile\" style={{ background: `#${color.hex}`, color: textColor }} onClick={handleClick}>\n            <div>#{color.hex}</div>\n            <div>{color.weight} %</div>\n            <div className=\"color-copied\">{isColorCopied ? \"Copied to clipboard\" : \"\"}</div>\n        </div>\n    )\n}\n\nexport default ColorBlock\n","import React, { useState } from \"react\"\nimport Values from \"values.js\"\nimport ColorBlock from \"./ColorBlock\"\n\nfunction App() {\n    const [userInput, setUserInput] = useState(\"\")\n    const [error, setError] = useState(false)\n    const [colorShades, setColorShades] = useState(null)\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        try {\n            const color = new Values(userInput)\n            setColorShades(color.all(20))\n            setError(false)\n        } catch (e) {\n            console.log(e)\n            setError(true)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"page-content\">\n                <div className=\"wrapper\">\n                    <h3>Color Shade Generator</h3>\n                    <p>Enter a color to get its different shades.</p>\n                    <p className=\"acceptable-formats\">Acceptable color formats - Hex, RGB, Color Name</p>\n\n                    <form className=\"form\" onSubmit={handleSubmit}>\n                        <input type=\"text\" value={userInput} onChange={e => setUserInput(e.target.value)} placeholder=\"Color\" />\n                        <button type=\"submit\">Generate</button>\n                        {error ? <div className=\"error\">Invalid Color</div> : null}\n                    </form>\n\n                    <div className=\"colors-container\">\n                        {colorShades &&\n                            !error &&\n                            colorShades.map((color, index) => {\n                                return <ColorBlock key={index} color={color} index={index} />\n                            })}\n                    </div>\n                </div>\n            </div>\n            <footer>\n                <p>\n                    Designed and Coded by <a href=\"https://www.linkedin.com/in/amanmaharshi/\">Aman Maharshi</a>\n                </p>\n            </footer>\n        </>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./style.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}