{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","dataCopy","setDataCopy","genderSelectValue","setGenderSelectValue","useEffect","getData","a","fetch","apiResponse","json","apiData","results","className","name","value","onChange","e","allItems","target","filter","user","gender","searchInput","toLowerCase","filteredUsers","userName","first","last","city","location","country","includes","type","placeholder","map","userIndex","email","picture","src","medium","alt","length","ReactDOM","render","document","getElementById"],"mappings":"wPAsFeA,EApFH,WACR,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkDJ,mBAAS,IAA3D,mBAAOK,EAAP,KAA0BC,EAA1B,KAEAC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAO,uCAAG,8BAAAC,EAAA,sEACcC,MAAM,yCADpB,cACNC,EADM,gBAEUA,EAAYC,OAFtB,OAENC,EAFM,OAGZX,EAAQW,EAAQC,SAChBV,EAAYS,EAAQC,SAJR,2CAAH,qDAsCb,OACI,sBAAKC,UAAU,OAAf,UACI,oBAAIA,UAAU,YAAd,oBACA,sBAAKA,UAAU,cAAf,UACI,yBAAQC,KAAK,SAASC,MAAOZ,EAAmBa,SAnC3B,SAAAC,GAC7B,IAAMC,EAAQ,YAAOjB,GACrBG,EAAqBa,EAAEE,OAAOJ,OACP,SAAnBE,EAAEE,OAAOJ,MACTf,EAAQkB,EAASE,QAAO,SAAAC,GAAI,MAAoB,SAAhBA,EAAKC,WACX,WAAnBL,EAAEE,OAAOJ,MAChBf,EAAQkB,EAASE,QAAO,SAAAC,GAAI,MAAoB,WAAhBA,EAAKC,WAErCtB,EAAQC,IA2BJ,UACI,wBAAQc,MAAM,GAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,uBAEJ,uBAAOC,SA5BE,SAAAC,GACjB,IAAMM,EAAcN,EAAEE,OAAOJ,MAAMS,cACnC,GAAID,EAAa,CACb,IAAME,EAAgB1B,EAAKqB,QAAO,SAAAC,GAC9B,IAAMK,GAAYL,EAAKP,KAAKa,MAAQ,IAAMN,EAAKP,KAAKc,MAAMJ,cACpDK,EAAOR,EAAKS,SAASD,KAAKL,cAC1BO,EAAUV,EAAKS,SAASC,QAAQP,cACtC,SAAIE,EAASM,SAAST,IAAgBM,EAAKG,SAAST,IAAgBQ,EAAQC,SAAST,OAMzFvB,EAAQyB,QAERzB,EAAQC,IAa2BgC,KAAK,OAAOC,YAAY,iBAE3D,sBAAKrB,UAAU,cAAf,UACKd,EACGA,EAAKoC,KAAI,SAACd,EAAMe,GACZ,IAAQtB,EAA2CO,EAA3CP,KAAMgB,EAAqCT,EAArCS,SAAUO,EAA2BhB,EAA3BgB,MAAOC,EAAoBjB,EAApBiB,QAAShB,EAAWD,EAAXC,OACxC,OACI,sBAAqBT,UAAU,OAA/B,UACI,sBAAKA,UAAU,WAAf,UACI,4BAAIC,EAAKa,MAAQ,IAAMb,EAAKc,OAC5B,4BAAIE,EAASD,KAAO,KAAOC,EAASC,UACpC,4BAAIM,OAER,qBAAKxB,UAAU,YAAf,SACI,qBAAK0B,IAAKD,EAAQE,OAAQC,IAAI,cAAc5B,UAAsB,SAAXS,EAAoB,gBAAkB,wBAP3Fc,MAalB,qBAAKvB,UAAU,YAElBd,GAAwB,IAAhBA,EAAK2C,OAAe,YAAc,YC3E3DC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5da7be91.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst App = () => {\n    const [data, setData] = useState(null)\n    const [dataCopy, setDataCopy] = useState(null)\n    const [genderSelectValue, setGenderSelectValue] = useState(\"\")\n\n    useEffect(() => {\n        getData()\n    }, [])\n\n    const getData = async () => {\n        const apiResponse = await fetch(\"https://randomuser.me/api/?results=12\")\n        const apiData = await apiResponse.json()\n        setData(apiData.results)\n        setDataCopy(apiData.results)\n    }\n\n    const handleGenderFilterChange = e => {\n        const allItems = [...dataCopy]\n        setGenderSelectValue(e.target.value)\n        if (e.target.value === \"male\") {\n            setData(allItems.filter(user => user.gender === \"male\"))\n        } else if (e.target.value === \"female\") {\n            setData(allItems.filter(user => user.gender === \"female\"))\n        } else {\n            setData(dataCopy)\n        }\n    }\n\n    const handleSearch = e => {\n        const searchInput = e.target.value.toLowerCase()\n        if (searchInput) {\n            const filteredUsers = data.filter(user => {\n                const userName = (user.name.first + \" \" + user.name.last).toLowerCase()\n                const city = user.location.city.toLowerCase()\n                const country = user.location.country.toLowerCase()\n                if (userName.includes(searchInput) || city.includes(searchInput) || country.includes(searchInput)) {\n                    return true\n                } else {\n                    return false\n                }\n            })\n            setData(filteredUsers)\n        } else {\n            setData(dataCopy)\n        }\n    }\n\n    return (\n        <div className=\"page\">\n            <h2 className=\"pageTitle\">People</h2>\n            <div className=\"pageOptions\">\n                <select name=\"gender\" value={genderSelectValue} onChange={handleGenderFilterChange}>\n                    <option value=\"\">All</option>\n                    <option value=\"male\">Male</option>\n                    <option value=\"female\">Female</option>\n                </select>\n                <input onChange={handleSearch} type=\"text\" placeholder=\"Search...\" />\n            </div>\n            <div className=\"pageContent\">\n                {data ? (\n                    data.map((user, userIndex) => {\n                        const { name, location, email, picture, gender } = user\n                        return (\n                            <div key={userIndex} className=\"card\">\n                                <div className=\"cardLeft\">\n                                    <p>{name.first + \" \" + name.last}</p>\n                                    <p>{location.city + \", \" + location.country}</p>\n                                    <p>{email}</p>\n                                </div>\n                                <div className=\"cardRight\">\n                                    <img src={picture.medium} alt=\"profile-pic\" className={gender === \"male\" ? \"maleHighlight\" : \"femaleHighlight\"} />\n                                </div>\n                            </div>\n                        )\n                    })\n                ) : (\n                    <div className=\"spinner\"></div>\n                )}\n                {data && data.length === 0 ? \"Not found\" : null}\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}